\contentsline {chapter}{\numberline {1}The HotPy Virtual Machine Execution Model}{2}{chapter.1}
\contentsline {section}{\numberline {1.1}The High Level Model}{2}{section.1.1}
\contentsline {section}{\numberline {1.2}Objects}{3}{section.1.2}
\contentsline {subsection}{\numberline {1.2.1}The object class}{3}{subsection.1.2.1}
\contentsline {subsection}{\numberline {1.2.2}The type class}{3}{subsection.1.2.2}
\contentsline {subsection}{\numberline {1.2.3}The thread class}{4}{subsection.1.2.3}
\contentsline {subsection}{\numberline {1.2.4}The frame class}{4}{subsection.1.2.4}
\contentsline {subsection}{\numberline {1.2.5}The function class}{5}{subsection.1.2.5}
\contentsline {subsection}{\numberline {1.2.6}The code\_object class}{5}{subsection.1.2.6}
\contentsline {subsection}{\numberline {1.2.7}The exception\_handler class}{5}{subsection.1.2.7}
\contentsline {section}{\numberline {1.3}Execution}{6}{section.1.3}
\contentsline {subsection}{\numberline {1.3.1}Threads}{6}{subsection.1.3.1}
\contentsline {subsection}{\numberline {1.3.2}Semantics}{6}{subsection.1.3.2}
\contentsline {subsection}{\numberline {1.3.3}Simple Bytecodes}{7}{subsection.1.3.3}
\contentsline {subsubsection}{Atomic and Non-Atomic Bytecodes}{7}{section*.2}
\contentsline {subsection}{\numberline {1.3.4}Atomic Bytecodes}{7}{subsection.1.3.4}
\contentsline {subsubsection}{Call}{7}{section*.3}
\contentsline {subsection}{\numberline {1.3.5}C Frames}{8}{subsection.1.3.5}
\contentsline {subsection}{\numberline {1.3.6}The Heap}{10}{subsection.1.3.6}
\contentsline {subsection}{\numberline {1.3.7}Thread Switching}{10}{subsection.1.3.7}
\contentsline {chapter}{\numberline {2}The Instruction Set}{11}{chapter.2}
\contentsline {subsubsection}{nop(---)}{11}{section*.4}
\contentsline {subsubsection}{name(int \#\#index --- R\_str name)}{11}{section*.5}
\contentsline {subsubsection}{drop(R\_object x ---)}{11}{section*.6}
\contentsline {subsubsection}{copy(R\_object x --- R\_object x, R\_object x)}{11}{section*.7}
\contentsline {subsubsection}{swap (R\_object x, R\_object x1 --- R\_object x1, R\_object x)}{11}{section*.8}
\contentsline {subsubsection}{over (R\_object x, R\_object x1 --- R\_object x, R\_object x1, R\_object x)}{11}{section*.9}
\contentsline {subsubsection}{rotate (R\_object x1, R\_object x2, R\_object x3 --- R\_object x2, R\_object x3, R\_object x1) }{11}{section*.10}
\contentsline {subsubsection}{rotate4 (R\_object x1, R\_object x2, R\_object x3, R\_object x4 --- R\_object x2, R\_object x3, R\_object x4, R\_object x1)}{12}{section*.11}
\contentsline {subsubsection}{rrot(R\_object x1, R\_object x2, R\_object x3 --- R\_object x3, R\_object x1, R\_object x2)}{12}{section*.12}
\contentsline {subsubsection}{pick (int \#n --- R\_object o)}{12}{section*.13}
\contentsline {subsubsection}{two\_copy(R\_object x, R\_object x1 --- R\_object x, R\_object x1, R\_object x, R\_object x1)}{12}{section*.14}
\contentsline {subsubsection}{binary(uint8\_t \#index, R\_object l, R\_object r --- R\_object value)}{12}{section*.15}
\contentsline {subsubsection}{unary(uint8\_t \#index, R\_object o --- R\_object value)}{12}{section*.16}
\contentsline {subsubsection}{iter(R\_object o --- R\_object it)}{12}{section*.17}
\contentsline {subsubsection}{next(R\_object it --- R\_object value) }{12}{section*.18}
\contentsline {subsubsection}{getitem(R\_object seq, R\_object index --- R\_object value)}{12}{section*.19}
\contentsline {subsubsection}{setitem(R\_object value, R\_object seq, R\_object index --- )}{13}{section*.20}
\contentsline {subsubsection}{delitem(R\_object seq, R\_object index --- )}{13}{section*.21}
\contentsline {subsubsection}{contains(R\_object item, R\_object container --- R\_object result)}{13}{section*.22}
\contentsline {subsubsection}{truth(R\_object o --- R\_bool b)}{13}{section*.23}
\contentsline {subsubsection}{is(R\_object o1, R\_object o2 --- R\_bool b) }{13}{section*.24}
\contentsline {subsubsection}{not(R\_object b1 --- R\_bool b2)}{13}{section*.25}
\contentsline {subsubsection}{fast\_not(R\_bool b1 --- R\_bool b2)}{13}{section*.26}
\contentsline {subsubsection}{constant(unsigned \#\#index --- R\_object object)}{13}{section*.27}
\contentsline {subsubsection}{fast\_constant(unsigned \#@address --- R\_object object)}{13}{section*.28}
\contentsline {subsubsection}{line(unsigned \#\#lineno ---)}{13}{section*.29}
\contentsline {subsubsection}{import(R\_object file --- R\_object object)}{14}{section*.30}
\contentsline {subsubsection}{list(uint8\_t \#count --- R\_list l)}{14}{section*.31}
\contentsline {subsubsection}{list\_append(R\_list l, R\_object o --- )}{14}{section*.32}
\contentsline {subsubsection}{pack(uint8\_t \#count --- R\_tuple t)}{14}{section*.33}
\contentsline {subsubsection}{empty\_tuple( --- R\_tuple t) }{14}{section*.34}
\contentsline {subsubsection}{tuple\_concat(R\_tuple t1, R\_tuple t2 --- R\_tuple t3)}{14}{section*.35}
\contentsline {subsubsection}{copy\_dict(R\_dict d --- R\_dict d)}{14}{section*.36}
\contentsline {subsubsection}{dict\_insert(R\_dict d, R\_str key, R\_object value --- R\_dict d)}{14}{section*.37}
\contentsline {subsubsection}{make\_class(int \#\#name, R\_object dict, R\_tuple bases --- R\_type cls)}{14}{section*.38}
\contentsline {subsubsection}{make\_func(uint8\_t \#code\_index, R\_tuple defaults, R\_dict annotations --- R\_object f)}{15}{section*.39}
\contentsline {subsubsection}{make\_closure(uint8\_t \#code\_index, R\_tuple defaults, R\_dict annotations --- R\_object f)}{15}{section*.40}
\contentsline {subsubsection}{yield(R\_object value --- )}{15}{section*.41}
\contentsline {subsubsection}{slice(R\_object o1, R\_object o2, R\_object o3 --- R\_slice s)}{15}{section*.42}
\contentsline {subsubsection}{f\_call(R\_object callable, R\_tuple args, R\_dict kws --- R\_object value)}{15}{section*.43}
\contentsline {subsubsection}{pack\_params(uint8\_t \#count --- R\_tuple t, R\_dict empty)}{15}{section*.44}
\contentsline {subsubsection}{load\_frame(uintptr\_t \#n --- R\_object value)}{15}{section*.45}
\contentsline {subsubsection}{delete\_frame(uintptr\_t \#n --- )}{16}{section*.46}
\contentsline {subsubsection}{store\_attr(int \#\#index, R\_object value, R\_object obj --- )}{16}{section*.47}
\contentsline {subsubsection}{del\_attr(int \#\#index, R\_object obj --- )}{16}{section*.48}
\contentsline {subsubsection}{load\_attr(int \#\#index, R\_object obj --- R\_object value)}{16}{section*.49}
\contentsline {subsubsection}{load\_local(unsigned \#\#name --- R\_object value) }{16}{section*.50}
\contentsline {subsubsection}{store\_local(unsigned \#\#name, R\_object value ---)}{16}{section*.51}
\contentsline {subsubsection}{delete\_local(unsigned \#\#name ---)}{16}{section*.52}
\contentsline {subsubsection}{load\_global(unsigned \#\#name --- R\_object value) }{16}{section*.53}
\contentsline {subsubsection}{store\_global(unsigned \#\#name, R\_object value ---)}{16}{section*.54}
\contentsline {subsubsection}{delete\_global(unsigned \#\#name ---)}{17}{section*.55}
\contentsline {subsubsection}{load\_deref(int \#depth, int \#n --- R\_object value)}{17}{section*.56}
\contentsline {subsubsection}{store\_deref(int \#depth, int \#n, R\_object value ---)}{17}{section*.57}
\contentsline {subsubsection}{on\_true(int \#\#offset, R\_object o ---)}{17}{section*.58}
\contentsline {subsubsection}{on\_false(int \#\#offset, R\_object o ---)}{17}{section*.59}
\contentsline {subsubsection}{for\_loop(int \#\#offset --- )}{17}{section*.60}
\contentsline {subsubsection}{end\_protect(int \#\#offset --- )}{17}{section*.61}
\contentsline {subsubsection}{return(R\_object val --- R\_object val)}{17}{section*.62}
\contentsline {subsubsection}{raise(R\_object o --- )}{17}{section*.63}
\contentsline {subsection}{\numberline {2.0.8}Optimiser Bytecodes}{17}{subsection.2.0.8}
\contentsline {subsubsection}{load\_special(R\_object obj, unsigned \#index --- R\_object attr)}{17}{section*.64}
\contentsline {subsubsection}{ensure\_type(unsigned \#@code, intptr\_t \#@exit, R\_object obj --- R\_object o)}{18}{section*.65}
\contentsline {subsubsection}{ensure\_type\_drop(unsigned \#@code, intptr\_t \#@exit, R\_object obj --- )}{18}{section*.66}
\contentsline {subsubsection}{ensure\_type2(unsigned \#@code, intptr\_t \#@exit, R\_object obj, R\_object tos --- R\_object o, R\_object tos)}{18}{section*.67}
\contentsline {subsubsection}{ensure\_value(unsigned \#@code, intptr\_t \#@exit, R\_object obj --- R\_object o)}{18}{section*.68}
\contentsline {subsubsection}{check\_keys(unsigned \#\#dict\_offset, unsigned \#@key\_address, intptr\_t \#@exit, R\_object obj --- )}{18}{section*.69}
\contentsline {subsubsection}{fast\_load\_attr(unsigned \#\#dict\_offset , unsigned \#\#index, R\_object object --- R\_object value)}{18}{section*.70}
\contentsline {subsubsection}{fast\_store\_attr(unsigned \#\#dict\_offset, unsigned \#\#index, R\_object value, R\_object object --- )}{19}{section*.71}
\contentsline {subsubsection}{fast\_load\_global(intptr\_t \#@address, unsigned \#\#index --- R\_object value)}{19}{section*.72}
\contentsline {subsubsection}{store\_load\_global(intptr\_t \#@address, unsigned \#\#index --- R\_object value)}{19}{section*.73}
\contentsline {subsubsection}{ensure\_initialised(uintptr\_t \#index, intptr\_t \#@exit --- )}{19}{section*.74}
\contentsline {subsection}{\numberline {2.0.9}Specialised bytecodes for ints and floats}{19}{subsection.2.0.9}
\contentsline {subsubsection}{i\_add(R\_int i1, R\_int i2, intptr\_t \#@exit --- R\_int result)}{19}{section*.75}
\contentsline {subsubsection}{i\_sub(R\_int i1, R\_int i2, intptr\_t \#@exit --- R\_int result)}{19}{section*.76}
\contentsline {subsubsection}{i\_mul(R\_int i1, R\_int i2 --- R\_int result)}{19}{section*.77}
\contentsline {subsubsection}{i\_div(R\_int i1, R\_int i2 --- R\_float result)}{20}{section*.78}
\contentsline {subsubsection}{i\_comp\_lt(R\_int i1, R\_int i2 --- R\_bool result)}{20}{section*.79}
\contentsline {subsubsection}{i\_comp\_gt(R\_int i1, R\_int i2 --- R\_bool result)}{20}{section*.80}
\contentsline {subsubsection}{i\_comp\_eq(R\_int i1, R\_int i2 --- R\_bool result)}{20}{section*.81}
\contentsline {subsubsection}{i\_comp\_ne(R\_int i1, R\_int i2 --- R\_bool result)}{20}{section*.82}
\contentsline {subsubsection}{i\_comp\_le(R\_int i1, R\_int i2 --- R\_bool result)}{20}{section*.83}
\contentsline {subsubsection}{i\_comp\_ge(R\_int i1, R\_int i2 --- R\_bool result)}{20}{section*.84}
\contentsline {subsubsection}{i\_exit\_lt(R\_int i1, R\_int i2, intptr\_t \#@exit --- )}{20}{section*.85}
\contentsline {subsubsection}{i\_exit\_gt(R\_int i1, R\_int i2, intptr\_t \#@exit --- )}{20}{section*.86}
\contentsline {subsubsection}{i\_exit\_eq(R\_int i1, R\_int i2, intptr\_t \#@exit --- )}{20}{section*.87}
\contentsline {subsubsection}{i\_exit\_ne(R\_int i1, R\_int i2, intptr\_t \#@exit --- )}{20}{section*.88}
\contentsline {subsubsection}{i\_exit\_le(R\_int i1, R\_int i2, intptr\_t \#@exit --- )}{20}{section*.89}
\contentsline {subsubsection}{i\_exit\_ge(R\_int i1, R\_int i2, intptr\_t \#@exit --- )}{20}{section*.90}
\contentsline {subsubsection}{f\_add(R\_float f1, R\_float f2 --- R\_float result)}{20}{section*.91}
\contentsline {subsubsection}{f\_sub(R\_float f1, R\_float f2 --- R\_float result)}{21}{section*.92}
\contentsline {subsubsection}{f\_mul(R\_float f1, R\_float f2 --- R\_float result)}{21}{section*.93}
\contentsline {subsubsection}{f\_div(R\_float f1, R\_float f2 --- R\_float result)}{21}{section*.94}
\contentsline {subsubsection}{f\_neg(R\_float f --- R\_float result)}{21}{section*.95}
\contentsline {subsubsection}{i2f(R\_object o --- R\_float result)}{21}{section*.96}
\contentsline {subsection}{\numberline {2.0.10}Bytecodes produced by the D.O.C. pass.}{21}{subsection.2.0.10}
\contentsline {subsubsection}{i2d(R\_object o --- double out)}{21}{section*.97}
\contentsline {subsubsection}{d\_add(double l, double r --- double out)}{21}{section*.98}
\contentsline {subsubsection}{d\_sub(double l, double r --- double out)}{21}{section*.99}
\contentsline {subsubsection}{d\_mul(double l, double r --- double out)}{21}{section*.100}
\contentsline {subsubsection}{d\_div(double l, double r --- double out)}{21}{section*.101}
\contentsline {subsubsection}{d\_neg(double f --- double out)}{21}{section*.102}
\contentsline {subsubsection}{d\_idiv(R\_int o1, R\_int o2 --- double out)}{21}{section*.103}
